import os
Import(['extEnv'])

platform = extEnv['PLATFORM']

# Pull down mbedtls from github and build the library

env = extEnv.Clone()

git = env.Command('./src/mbedtls/.git', None,
                   ['git clone -n https://github.com/ARMmbed/mbedtls ext/src/mbedtls'])

dep = env.Command('./src/mbedtls/Makefile', git,
                   ['git checkout tags/mbedtls-2.8.0'],
                     chdir = 'ext/src/mbedtls')

env.Append(
    CPPPATH = [
        './include',
        './src/mbedtls/include/',
    ],
    CPPDEFINES = [
        'MBEDTLS_USER_CONFIG_FILE=\\"mbedtls_config.h\\"',
    ]
)

if env['PLATFORM'] == 'posix':
   env.Append(CFLAGS = ['-fPIC', "-g"])

sources = [
     './src/mbedtls/library/aes.c',
     './src/mbedtls/library/aesni.c',
     './src/mbedtls/library/asn1write.c',
     './src/mbedtls/library/asn1parse.c',
     './src/mbedtls/library/base64.c',
     './src/mbedtls/library/bignum.c',
     './src/mbedtls/library/cipher.c',
     './src/mbedtls/library/cipher_wrap.c',
     './src/mbedtls/library/ctr_drbg.c',
     './src/mbedtls/library/debug.c',
     './src/mbedtls/library/ecdh.c',
     './src/mbedtls/library/ecdsa.c',
     './src/mbedtls/library/ecp.c',
     './src/mbedtls/library/ecp_curves.c',
     './src/mbedtls/library/entropy.c',
     './src/mbedtls/library/entropy_poll.c',
     './src/mbedtls/library/error.c',
     './src/mbedtls/library/gcm.c',
     './src/mbedtls/library/hmac_drbg.c',
     './src/mbedtls/library/md.c',
     './src/mbedtls/library/md_wrap.c',
     './src/mbedtls/library/md5.c',
     './src/mbedtls/library/oid.c',
     './src/mbedtls/library/pem.c',
     './src/mbedtls/library/pk.c',
     './src/mbedtls/library/pk_wrap.c',
     './src/mbedtls/library/pkparse.c',
     './src/mbedtls/library/platform.c',
     './src/mbedtls/library/sha256.c',
     './src/mbedtls/library/sha512.c',
     './src/mbedtls/library/timing.c',
     './src/mbedtls/library/x509.c',
     './src/mbedtls/library/x509_crt.c',
]

sources += [
     './src/mbedtls/library/ssl_cache.c',
     './src/mbedtls/library/ssl_ciphersuites.c',
     './src/mbedtls/library/ssl_cli.c',
     './src/mbedtls/library/ssl_cookie.c',
     './src/mbedtls/library/ssl_srv.c',
     './src/mbedtls/library/ssl_tls.c',
]

objects = env.Object(sources)

Depends(sources, dep)
Depends(objects, './include/mbedtls_config.h')

libs = [env.Library('src/lib/libmbedtls', objects)]
Return('libs')
